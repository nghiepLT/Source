#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PQT.DAC
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "locnhungdongnai")]
	public partial class RealDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTRealToCategory(TRealToCategory instance);
    partial void UpdateTRealToCategory(TRealToCategory instance);
    partial void DeleteTRealToCategory(TRealToCategory instance);
    partial void InsertTRealBaseCode(TRealBaseCode instance);
    partial void UpdateTRealBaseCode(TRealBaseCode instance);
    partial void DeleteTRealBaseCode(TRealBaseCode instance);
    partial void InsertTRealCategory(TRealCategory instance);
    partial void UpdateTRealCategory(TRealCategory instance);
    partial void DeleteTRealCategory(TRealCategory instance);
    partial void InsertTRealCategoryDescription(TRealCategoryDescription instance);
    partial void UpdateTRealCategoryDescription(TRealCategoryDescription instance);
    partial void DeleteTRealCategoryDescription(TRealCategoryDescription instance);
    partial void InsertTRealCustomer(TRealCustomer instance);
    partial void UpdateTRealCustomer(TRealCustomer instance);
    partial void DeleteTRealCustomer(TRealCustomer instance);
    partial void InsertTRealDescription(TRealDescription instance);
    partial void UpdateTRealDescription(TRealDescription instance);
    partial void DeleteTRealDescription(TRealDescription instance);
    partial void InsertTRealDetail(TRealDetail instance);
    partial void UpdateTRealDetail(TRealDetail instance);
    partial void DeleteTRealDetail(TRealDetail instance);
    partial void InsertTRealDetailDescription(TRealDetailDescription instance);
    partial void UpdateTRealDetailDescription(TRealDetailDescription instance);
    partial void DeleteTRealDetailDescription(TRealDetailDescription instance);
    partial void InsertTRealGroupBaseCode(TRealGroupBaseCode instance);
    partial void UpdateTRealGroupBaseCode(TRealGroupBaseCode instance);
    partial void DeleteTRealGroupBaseCode(TRealGroupBaseCode instance);
    partial void InsertTRealImage(TRealImage instance);
    partial void UpdateTRealImage(TRealImage instance);
    partial void DeleteTRealImage(TRealImage instance);
    partial void InsertTRealRoomNumber(TRealRoomNumber instance);
    partial void UpdateTRealRoomNumber(TRealRoomNumber instance);
    partial void DeleteTRealRoomNumber(TRealRoomNumber instance);
    partial void InsertTReal(TReal instance);
    partial void UpdateTReal(TReal instance);
    partial void DeleteTReal(TReal instance);
    #endregion
		
		public RealDataDataContext() :
        base(global::PQT.DAC.Properties.Settings.Default.Quanlynhansu_nkcn_2018ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RealDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RealDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RealDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RealDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TRealToCategory> TRealToCategories
		{
			get
			{
				return this.GetTable<TRealToCategory>();
			}
		}
		
		public System.Data.Linq.Table<TRealBaseCode> TRealBaseCodes
		{
			get
			{
				return this.GetTable<TRealBaseCode>();
			}
		}
		
		public System.Data.Linq.Table<TRealCategory> TRealCategories
		{
			get
			{
				return this.GetTable<TRealCategory>();
			}
		}
		
		public System.Data.Linq.Table<TRealCategoryDescription> TRealCategoryDescriptions
		{
			get
			{
				return this.GetTable<TRealCategoryDescription>();
			}
		}
		
		public System.Data.Linq.Table<TRealCustomer> TRealCustomers
		{
			get
			{
				return this.GetTable<TRealCustomer>();
			}
		}
		
		public System.Data.Linq.Table<TRealDescription> TRealDescriptions
		{
			get
			{
				return this.GetTable<TRealDescription>();
			}
		}
		
		public System.Data.Linq.Table<TRealDetail> TRealDetails
		{
			get
			{
				return this.GetTable<TRealDetail>();
			}
		}
		
		public System.Data.Linq.Table<TRealDetailDescription> TRealDetailDescriptions
		{
			get
			{
				return this.GetTable<TRealDetailDescription>();
			}
		}
		
		public System.Data.Linq.Table<TRealGroupBaseCode> TRealGroupBaseCodes
		{
			get
			{
				return this.GetTable<TRealGroupBaseCode>();
			}
		}
		
		public System.Data.Linq.Table<TRealImage> TRealImages
		{
			get
			{
				return this.GetTable<TRealImage>();
			}
		}
		
		public System.Data.Linq.Table<TRealRoomNumber> TRealRoomNumbers
		{
			get
			{
				return this.GetTable<TRealRoomNumber>();
			}
		}
		
		public System.Data.Linq.Table<TReal> TReals
		{
			get
			{
				return this.GetTable<TReal>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRealToCategory")]
	public partial class TRealToCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RealCategoryID;
		
		private long _RealID;
		
		private EntityRef<TRealCategory> _TRealCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRealCategoryIDChanging(int value);
    partial void OnRealCategoryIDChanged();
    partial void OnRealIDChanging(long value);
    partial void OnRealIDChanged();
    #endregion
		
		public TRealToCategory()
		{
			this._TRealCategory = default(EntityRef<TRealCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealCategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RealCategoryID
		{
			get
			{
				return this._RealCategoryID;
			}
			set
			{
				if ((this._RealCategoryID != value))
				{
					if (this._TRealCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRealCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._RealCategoryID = value;
					this.SendPropertyChanged("RealCategoryID");
					this.OnRealCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RealID
		{
			get
			{
				return this._RealID;
			}
			set
			{
				if ((this._RealID != value))
				{
					this.OnRealIDChanging(value);
					this.SendPropertyChanging();
					this._RealID = value;
					this.SendPropertyChanged("RealID");
					this.OnRealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRealCategory_TRealToCategory", Storage="_TRealCategory", ThisKey="RealCategoryID", OtherKey="RealCategoryID", IsForeignKey=true)]
		public TRealCategory TRealCategory
		{
			get
			{
				return this._TRealCategory.Entity;
			}
			set
			{
				TRealCategory previousValue = this._TRealCategory.Entity;
				if (((previousValue != value) 
							|| (this._TRealCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRealCategory.Entity = null;
						previousValue.TRealToCategories.Remove(this);
					}
					this._TRealCategory.Entity = value;
					if ((value != null))
					{
						value.TRealToCategories.Add(this);
						this._RealCategoryID = value.RealCategoryID;
					}
					else
					{
						this._RealCategoryID = default(int);
					}
					this.SendPropertyChanged("TRealCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRealBaseCode")]
	public partial class TRealBaseCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BaseID;
		
		private System.Nullable<int> _GroupID;
		
		private string _Name;
		
		private string _SortOrder;
		
		private string _Option1;
		
		private string _Option2;
		
		private string _Option3;
		
		private EntityRef<TRealGroupBaseCode> _TRealGroupBaseCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBaseIDChanging(int value);
    partial void OnBaseIDChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortOrderChanging(string value);
    partial void OnSortOrderChanged();
    partial void OnOption1Changing(string value);
    partial void OnOption1Changed();
    partial void OnOption2Changing(string value);
    partial void OnOption2Changed();
    partial void OnOption3Changing(string value);
    partial void OnOption3Changed();
    #endregion
		
		public TRealBaseCode()
		{
			this._TRealGroupBaseCode = default(EntityRef<TRealGroupBaseCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BaseID
		{
			get
			{
				return this._BaseID;
			}
			set
			{
				if ((this._BaseID != value))
				{
					this.OnBaseIDChanging(value);
					this.SendPropertyChanging();
					this._BaseID = value;
					this.SendPropertyChanged("BaseID");
					this.OnBaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._TRealGroupBaseCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="NChar(10)")]
		public string SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option1", DbType="NVarChar(250)")]
		public string Option1
		{
			get
			{
				return this._Option1;
			}
			set
			{
				if ((this._Option1 != value))
				{
					this.OnOption1Changing(value);
					this.SendPropertyChanging();
					this._Option1 = value;
					this.SendPropertyChanged("Option1");
					this.OnOption1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option2", DbType="NVarChar(250)")]
		public string Option2
		{
			get
			{
				return this._Option2;
			}
			set
			{
				if ((this._Option2 != value))
				{
					this.OnOption2Changing(value);
					this.SendPropertyChanging();
					this._Option2 = value;
					this.SendPropertyChanged("Option2");
					this.OnOption2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option3", DbType="NVarChar(250)")]
		public string Option3
		{
			get
			{
				return this._Option3;
			}
			set
			{
				if ((this._Option3 != value))
				{
					this.OnOption3Changing(value);
					this.SendPropertyChanging();
					this._Option3 = value;
					this.SendPropertyChanged("Option3");
					this.OnOption3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRealGroupBaseCode_TRealBaseCode", Storage="_TRealGroupBaseCode", ThisKey="GroupID", OtherKey="GroupID", IsForeignKey=true)]
		public TRealGroupBaseCode TRealGroupBaseCode
		{
			get
			{
				return this._TRealGroupBaseCode.Entity;
			}
			set
			{
				TRealGroupBaseCode previousValue = this._TRealGroupBaseCode.Entity;
				if (((previousValue != value) 
							|| (this._TRealGroupBaseCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRealGroupBaseCode.Entity = null;
						previousValue.TRealBaseCodes.Remove(this);
					}
					this._TRealGroupBaseCode.Entity = value;
					if ((value != null))
					{
						value.TRealBaseCodes.Add(this);
						this._GroupID = value.GroupID;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TRealGroupBaseCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRealCategory")]
	public partial class TRealCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RealCategoryID;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<bool> _Status;
		
		private string _UniqueKey;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<long> _Image;
		
		private EntitySet<TRealToCategory> _TRealToCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRealCategoryIDChanging(int value);
    partial void OnRealCategoryIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnUniqueKeyChanging(string value);
    partial void OnUniqueKeyChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnImageChanging(System.Nullable<long> value);
    partial void OnImageChanged();
    #endregion
		
		public TRealCategory()
		{
			this._TRealToCategories = new EntitySet<TRealToCategory>(new Action<TRealToCategory>(this.attach_TRealToCategories), new Action<TRealToCategory>(this.detach_TRealToCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealCategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RealCategoryID
		{
			get
			{
				return this._RealCategoryID;
			}
			set
			{
				if ((this._RealCategoryID != value))
				{
					this.OnRealCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._RealCategoryID = value;
					this.SendPropertyChanged("RealCategoryID");
					this.OnRealCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueKey", DbType="NVarChar(50)")]
		public string UniqueKey
		{
			get
			{
				return this._UniqueKey;
			}
			set
			{
				if ((this._UniqueKey != value))
				{
					this.OnUniqueKeyChanging(value);
					this.SendPropertyChanging();
					this._UniqueKey = value;
					this.SendPropertyChanged("UniqueKey");
					this.OnUniqueKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="BigInt")]
		public System.Nullable<long> Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRealCategory_TRealToCategory", Storage="_TRealToCategories", ThisKey="RealCategoryID", OtherKey="RealCategoryID")]
		public EntitySet<TRealToCategory> TRealToCategories
		{
			get
			{
				return this._TRealToCategories;
			}
			set
			{
				this._TRealToCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRealToCategories(TRealToCategory entity)
		{
			this.SendPropertyChanging();
			entity.TRealCategory = this;
		}
		
		private void detach_TRealToCategories(TRealToCategory entity)
		{
			this.SendPropertyChanging();
			entity.TRealCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRealCategoryDescription")]
	public partial class TRealCategoryDescription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RealCategoryID;
		
		private int _LanguageID;
		
		private string _CategoryName;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRealCategoryIDChanging(int value);
    partial void OnRealCategoryIDChanged();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public TRealCategoryDescription()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealCategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RealCategoryID
		{
			get
			{
				return this._RealCategoryID;
			}
			set
			{
				if ((this._RealCategoryID != value))
				{
					this.OnRealCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._RealCategoryID = value;
					this.SendPropertyChanged("RealCategoryID");
					this.OnRealCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(350)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRealCustomer")]
	public partial class TRealCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private string _Fullname;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _Address;
		
		private System.Nullable<int> _AreaID;
		
		private string _Phone;
		
		private string _Email;
		
		private string _CMND;
		
		private string _Passport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnFullnameChanging(string value);
    partial void OnFullnameChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAreaIDChanging(System.Nullable<int> value);
    partial void OnAreaIDChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnPassportChanging(string value);
    partial void OnPassportChanged();
    #endregion
		
		public TRealCustomer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fullname", DbType="NVarChar(50)")]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this.OnFullnameChanging(value);
					this.SendPropertyChanging();
					this._Fullname = value;
					this.SendPropertyChanged("Fullname");
					this.OnFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaID", DbType="Int")]
		public System.Nullable<int> AreaID
		{
			get
			{
				return this._AreaID;
			}
			set
			{
				if ((this._AreaID != value))
				{
					this.OnAreaIDChanging(value);
					this.SendPropertyChanging();
					this._AreaID = value;
					this.SendPropertyChanged("AreaID");
					this.OnAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(50)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passport", DbType="NVarChar(50)")]
		public string Passport
		{
			get
			{
				return this._Passport;
			}
			set
			{
				if ((this._Passport != value))
				{
					this.OnPassportChanging(value);
					this.SendPropertyChanging();
					this._Passport = value;
					this.SendPropertyChanged("Passport");
					this.OnPassportChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRealDescription")]
	public partial class TRealDescription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RealID;
		
		private int _LanguageID;
		
		private string _Title;
		
		private string _SubContent;
		
		private string _Content;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRealIDChanging(long value);
    partial void OnRealIDChanged();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSubContentChanging(string value);
    partial void OnSubContentChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public TRealDescription()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RealID
		{
			get
			{
				return this._RealID;
			}
			set
			{
				if ((this._RealID != value))
				{
					this.OnRealIDChanging(value);
					this.SendPropertyChanging();
					this._RealID = value;
					this.SendPropertyChanged("RealID");
					this.OnRealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubContent", DbType="NVarChar(300)")]
		public string SubContent
		{
			get
			{
				return this._SubContent;
			}
			set
			{
				if ((this._SubContent != value))
				{
					this.OnSubContentChanging(value);
					this.SendPropertyChanging();
					this._SubContent = value;
					this.SendPropertyChanged("SubContent");
					this.OnSubContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRealDetail")]
	public partial class TRealDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RealDetailID;
		
		private System.Nullable<int> _RealID;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<long> _Image;
		
		private System.Nullable<long> _File1;
		
		private System.Nullable<long> _File2;
		
		private System.Nullable<int> _SortOrder;
		
		private string _Keyword;
		
		private System.Nullable<System.DateTime> _RegDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRealDetailIDChanging(int value);
    partial void OnRealDetailIDChanged();
    partial void OnRealIDChanging(System.Nullable<int> value);
    partial void OnRealIDChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnImageChanging(System.Nullable<long> value);
    partial void OnImageChanged();
    partial void OnFile1Changing(System.Nullable<long> value);
    partial void OnFile1Changed();
    partial void OnFile2Changing(System.Nullable<long> value);
    partial void OnFile2Changed();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnKeywordChanging(string value);
    partial void OnKeywordChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    #endregion
		
		public TRealDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RealDetailID
		{
			get
			{
				return this._RealDetailID;
			}
			set
			{
				if ((this._RealDetailID != value))
				{
					this.OnRealDetailIDChanging(value);
					this.SendPropertyChanging();
					this._RealDetailID = value;
					this.SendPropertyChanged("RealDetailID");
					this.OnRealDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealID", DbType="Int")]
		public System.Nullable<int> RealID
		{
			get
			{
				return this._RealID;
			}
			set
			{
				if ((this._RealID != value))
				{
					this.OnRealIDChanging(value);
					this.SendPropertyChanging();
					this._RealID = value;
					this.SendPropertyChanged("RealID");
					this.OnRealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="BigInt")]
		public System.Nullable<long> Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File1", DbType="BigInt")]
		public System.Nullable<long> File1
		{
			get
			{
				return this._File1;
			}
			set
			{
				if ((this._File1 != value))
				{
					this.OnFile1Changing(value);
					this.SendPropertyChanging();
					this._File1 = value;
					this.SendPropertyChanged("File1");
					this.OnFile1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File2", DbType="BigInt")]
		public System.Nullable<long> File2
		{
			get
			{
				return this._File2;
			}
			set
			{
				if ((this._File2 != value))
				{
					this.OnFile2Changing(value);
					this.SendPropertyChanging();
					this._File2 = value;
					this.SendPropertyChanged("File2");
					this.OnFile2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keyword", DbType="NVarChar(50)")]
		public string Keyword
		{
			get
			{
				return this._Keyword;
			}
			set
			{
				if ((this._Keyword != value))
				{
					this.OnKeywordChanging(value);
					this.SendPropertyChanging();
					this._Keyword = value;
					this.SendPropertyChanged("Keyword");
					this.OnKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegDate
		{
			get
			{
				return this._RegDate;
			}
			set
			{
				if ((this._RegDate != value))
				{
					this.OnRegDateChanging(value);
					this.SendPropertyChanging();
					this._RegDate = value;
					this.SendPropertyChanged("RegDate");
					this.OnRegDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRealDetailDescription")]
	public partial class TRealDetailDescription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RealDetailID;
		
		private int _LanguageID;
		
		private string _Title;
		
		private string _SubContent;
		
		private string _Contents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRealDetailIDChanging(int value);
    partial void OnRealDetailIDChanged();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSubContentChanging(string value);
    partial void OnSubContentChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    #endregion
		
		public TRealDetailDescription()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealDetailID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RealDetailID
		{
			get
			{
				return this._RealDetailID;
			}
			set
			{
				if ((this._RealDetailID != value))
				{
					this.OnRealDetailIDChanging(value);
					this.SendPropertyChanging();
					this._RealDetailID = value;
					this.SendPropertyChanged("RealDetailID");
					this.OnRealDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubContent", DbType="NVarChar(1000)")]
		public string SubContent
		{
			get
			{
				return this._SubContent;
			}
			set
			{
				if ((this._SubContent != value))
				{
					this.OnSubContentChanging(value);
					this.SendPropertyChanging();
					this._SubContent = value;
					this.SendPropertyChanged("SubContent");
					this.OnSubContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRealGroupBaseCode")]
	public partial class TRealGroupBaseCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private string _Name;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<int> _SortOrder;
		
		private string _KeyWord;
		
		private EntitySet<TRealBaseCode> _TRealBaseCodes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnKeyWordChanging(string value);
    partial void OnKeyWordChanged();
    #endregion
		
		public TRealGroupBaseCode()
		{
			this._TRealBaseCodes = new EntitySet<TRealBaseCode>(new Action<TRealBaseCode>(this.attach_TRealBaseCodes), new Action<TRealBaseCode>(this.detach_TRealBaseCodes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWord", DbType="NVarChar(50)")]
		public string KeyWord
		{
			get
			{
				return this._KeyWord;
			}
			set
			{
				if ((this._KeyWord != value))
				{
					this.OnKeyWordChanging(value);
					this.SendPropertyChanging();
					this._KeyWord = value;
					this.SendPropertyChanged("KeyWord");
					this.OnKeyWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRealGroupBaseCode_TRealBaseCode", Storage="_TRealBaseCodes", ThisKey="GroupID", OtherKey="GroupID")]
		public EntitySet<TRealBaseCode> TRealBaseCodes
		{
			get
			{
				return this._TRealBaseCodes;
			}
			set
			{
				this._TRealBaseCodes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRealBaseCodes(TRealBaseCode entity)
		{
			this.SendPropertyChanging();
			entity.TRealGroupBaseCode = this;
		}
		
		private void detach_TRealBaseCodes(TRealBaseCode entity)
		{
			this.SendPropertyChanging();
			entity.TRealGroupBaseCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRealImages")]
	public partial class TRealImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RealID;
		
		private long _RealImageID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRealIDChanging(long value);
    partial void OnRealIDChanged();
    partial void OnRealImageIDChanging(long value);
    partial void OnRealImageIDChanged();
    #endregion
		
		public TRealImage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RealID
		{
			get
			{
				return this._RealID;
			}
			set
			{
				if ((this._RealID != value))
				{
					this.OnRealIDChanging(value);
					this.SendPropertyChanging();
					this._RealID = value;
					this.SendPropertyChanged("RealID");
					this.OnRealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RealImageID
		{
			get
			{
				return this._RealImageID;
			}
			set
			{
				if ((this._RealImageID != value))
				{
					this.OnRealImageIDChanging(value);
					this.SendPropertyChanging();
					this._RealImageID = value;
					this.SendPropertyChanged("RealImageID");
					this.OnRealImageIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRealRoomNumber")]
	public partial class TRealRoomNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RealID;
		
		private System.Nullable<int> _SoPhongKhach;
		
		private System.Nullable<int> _SoPhongNgu;
		
		private System.Nullable<int> _SoPhongBep;
		
		private System.Nullable<int> _SoPhongWC;
		
		private System.Nullable<int> _SoPhongTho;
		
		private System.Nullable<int> _SoTang;
		
		private System.Nullable<int> _So1;
		
		private System.Nullable<int> _So2;
		
		private System.Nullable<int> _So3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRealIDChanging(long value);
    partial void OnRealIDChanged();
    partial void OnSoPhongKhachChanging(System.Nullable<int> value);
    partial void OnSoPhongKhachChanged();
    partial void OnSoPhongNguChanging(System.Nullable<int> value);
    partial void OnSoPhongNguChanged();
    partial void OnSoPhongBepChanging(System.Nullable<int> value);
    partial void OnSoPhongBepChanged();
    partial void OnSoPhongWCChanging(System.Nullable<int> value);
    partial void OnSoPhongWCChanged();
    partial void OnSoPhongThoChanging(System.Nullable<int> value);
    partial void OnSoPhongThoChanged();
    partial void OnSoTangChanging(System.Nullable<int> value);
    partial void OnSoTangChanged();
    partial void OnSo1Changing(System.Nullable<int> value);
    partial void OnSo1Changed();
    partial void OnSo2Changing(System.Nullable<int> value);
    partial void OnSo2Changed();
    partial void OnSo3Changing(System.Nullable<int> value);
    partial void OnSo3Changed();
    #endregion
		
		public TRealRoomNumber()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long RealID
		{
			get
			{
				return this._RealID;
			}
			set
			{
				if ((this._RealID != value))
				{
					this.OnRealIDChanging(value);
					this.SendPropertyChanging();
					this._RealID = value;
					this.SendPropertyChanged("RealID");
					this.OnRealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhongKhach", DbType="Int")]
		public System.Nullable<int> SoPhongKhach
		{
			get
			{
				return this._SoPhongKhach;
			}
			set
			{
				if ((this._SoPhongKhach != value))
				{
					this.OnSoPhongKhachChanging(value);
					this.SendPropertyChanging();
					this._SoPhongKhach = value;
					this.SendPropertyChanged("SoPhongKhach");
					this.OnSoPhongKhachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhongNgu", DbType="Int")]
		public System.Nullable<int> SoPhongNgu
		{
			get
			{
				return this._SoPhongNgu;
			}
			set
			{
				if ((this._SoPhongNgu != value))
				{
					this.OnSoPhongNguChanging(value);
					this.SendPropertyChanging();
					this._SoPhongNgu = value;
					this.SendPropertyChanged("SoPhongNgu");
					this.OnSoPhongNguChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhongBep", DbType="Int")]
		public System.Nullable<int> SoPhongBep
		{
			get
			{
				return this._SoPhongBep;
			}
			set
			{
				if ((this._SoPhongBep != value))
				{
					this.OnSoPhongBepChanging(value);
					this.SendPropertyChanging();
					this._SoPhongBep = value;
					this.SendPropertyChanged("SoPhongBep");
					this.OnSoPhongBepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhongWC", DbType="Int")]
		public System.Nullable<int> SoPhongWC
		{
			get
			{
				return this._SoPhongWC;
			}
			set
			{
				if ((this._SoPhongWC != value))
				{
					this.OnSoPhongWCChanging(value);
					this.SendPropertyChanging();
					this._SoPhongWC = value;
					this.SendPropertyChanged("SoPhongWC");
					this.OnSoPhongWCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhongTho", DbType="Int")]
		public System.Nullable<int> SoPhongTho
		{
			get
			{
				return this._SoPhongTho;
			}
			set
			{
				if ((this._SoPhongTho != value))
				{
					this.OnSoPhongThoChanging(value);
					this.SendPropertyChanging();
					this._SoPhongTho = value;
					this.SendPropertyChanged("SoPhongTho");
					this.OnSoPhongThoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTang", DbType="Int")]
		public System.Nullable<int> SoTang
		{
			get
			{
				return this._SoTang;
			}
			set
			{
				if ((this._SoTang != value))
				{
					this.OnSoTangChanging(value);
					this.SendPropertyChanging();
					this._SoTang = value;
					this.SendPropertyChanged("SoTang");
					this.OnSoTangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_So1", DbType="Int")]
		public System.Nullable<int> So1
		{
			get
			{
				return this._So1;
			}
			set
			{
				if ((this._So1 != value))
				{
					this.OnSo1Changing(value);
					this.SendPropertyChanging();
					this._So1 = value;
					this.SendPropertyChanged("So1");
					this.OnSo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_So2", DbType="Int")]
		public System.Nullable<int> So2
		{
			get
			{
				return this._So2;
			}
			set
			{
				if ((this._So2 != value))
				{
					this.OnSo2Changing(value);
					this.SendPropertyChanging();
					this._So2 = value;
					this.SendPropertyChanged("So2");
					this.OnSo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_So3", DbType="Int")]
		public System.Nullable<int> So3
		{
			get
			{
				return this._So3;
			}
			set
			{
				if ((this._So3 != value))
				{
					this.OnSo3Changing(value);
					this.SendPropertyChanging();
					this._So3 = value;
					this.SendPropertyChanged("So3");
					this.OnSo3Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TReal")]
	public partial class TReal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RealID;
		
		private System.Nullable<int> _AreaID;
		
		private System.Nullable<int> _AreaID1;
		
		private System.Nullable<int> _SortOrder;
		
		private string _Name;
		
		private System.Nullable<decimal> _Price1;
		
		private System.Nullable<decimal> _Price2;
		
		private string _PriceText;
		
		private string _Address;
		
		private System.Nullable<double> _XSize;
		
		private System.Nullable<double> _YSize;
		
		private System.Nullable<double> _TotalSize;
		
		private string _UseSize;
		
		private System.Nullable<int> _DirectionID;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<long> _Image;
		
		private string _UltilityString;
		
		private System.Nullable<System.DateTime> _PostDate;
		
		private System.Nullable<System.DateTime> _ViewDate;
		
		private System.Nullable<int> _PostTime;
		
		private System.Nullable<bool> _Status;
		
		private string _NewsType;
		
		private System.Nullable<int> _CurrencyID;
		
		private System.Nullable<int> _UserID;
		
		private string _RealProject;
		
		private string _Company;
		
		private string _floor;
		
		private string _RealCode;
		
		private string _WideRoad;
		
		private System.Nullable<int> _RealUnit;
		
		private string _SizeUnit;
		
		private System.Nullable<System.DateTime> _EndDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRealIDChanging(long value);
    partial void OnRealIDChanged();
    partial void OnAreaIDChanging(System.Nullable<int> value);
    partial void OnAreaIDChanged();
    partial void OnAreaID1Changing(System.Nullable<int> value);
    partial void OnAreaID1Changed();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPrice1Changing(System.Nullable<decimal> value);
    partial void OnPrice1Changed();
    partial void OnPrice2Changing(System.Nullable<decimal> value);
    partial void OnPrice2Changed();
    partial void OnPriceTextChanging(string value);
    partial void OnPriceTextChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnXSizeChanging(System.Nullable<double> value);
    partial void OnXSizeChanged();
    partial void OnYSizeChanging(System.Nullable<double> value);
    partial void OnYSizeChanged();
    partial void OnTotalSizeChanging(System.Nullable<double> value);
    partial void OnTotalSizeChanged();
    partial void OnUseSizeChanging(string value);
    partial void OnUseSizeChanged();
    partial void OnDirectionIDChanging(System.Nullable<int> value);
    partial void OnDirectionIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnImageChanging(System.Nullable<long> value);
    partial void OnImageChanged();
    partial void OnUltilityStringChanging(string value);
    partial void OnUltilityStringChanged();
    partial void OnPostDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPostDateChanged();
    partial void OnViewDateChanging(System.Nullable<System.DateTime> value);
    partial void OnViewDateChanged();
    partial void OnPostTimeChanging(System.Nullable<int> value);
    partial void OnPostTimeChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnNewsTypeChanging(string value);
    partial void OnNewsTypeChanged();
    partial void OnCurrencyIDChanging(System.Nullable<int> value);
    partial void OnCurrencyIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRealProjectChanging(string value);
    partial void OnRealProjectChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnfloorChanging(string value);
    partial void OnfloorChanged();
    partial void OnRealCodeChanging(string value);
    partial void OnRealCodeChanged();
    partial void OnWideRoadChanging(string value);
    partial void OnWideRoadChanged();
    partial void OnRealUnitChanging(System.Nullable<int> value);
    partial void OnRealUnitChanged();
    partial void OnSizeUnitChanging(string value);
    partial void OnSizeUnitChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public TReal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long RealID
		{
			get
			{
				return this._RealID;
			}
			set
			{
				if ((this._RealID != value))
				{
					this.OnRealIDChanging(value);
					this.SendPropertyChanging();
					this._RealID = value;
					this.SendPropertyChanged("RealID");
					this.OnRealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaID", DbType="Int")]
		public System.Nullable<int> AreaID
		{
			get
			{
				return this._AreaID;
			}
			set
			{
				if ((this._AreaID != value))
				{
					this.OnAreaIDChanging(value);
					this.SendPropertyChanging();
					this._AreaID = value;
					this.SendPropertyChanged("AreaID");
					this.OnAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaID1", DbType="Int")]
		public System.Nullable<int> AreaID1
		{
			get
			{
				return this._AreaID1;
			}
			set
			{
				if ((this._AreaID1 != value))
				{
					this.OnAreaID1Changing(value);
					this.SendPropertyChanging();
					this._AreaID1 = value;
					this.SendPropertyChanged("AreaID1");
					this.OnAreaID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price1", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this.OnPrice1Changing(value);
					this.SendPropertyChanging();
					this._Price1 = value;
					this.SendPropertyChanged("Price1");
					this.OnPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price2", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> Price2
		{
			get
			{
				return this._Price2;
			}
			set
			{
				if ((this._Price2 != value))
				{
					this.OnPrice2Changing(value);
					this.SendPropertyChanging();
					this._Price2 = value;
					this.SendPropertyChanged("Price2");
					this.OnPrice2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceText", DbType="NVarChar(50)")]
		public string PriceText
		{
			get
			{
				return this._PriceText;
			}
			set
			{
				if ((this._PriceText != value))
				{
					this.OnPriceTextChanging(value);
					this.SendPropertyChanging();
					this._PriceText = value;
					this.SendPropertyChanged("PriceText");
					this.OnPriceTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XSize", DbType="Float")]
		public System.Nullable<double> XSize
		{
			get
			{
				return this._XSize;
			}
			set
			{
				if ((this._XSize != value))
				{
					this.OnXSizeChanging(value);
					this.SendPropertyChanging();
					this._XSize = value;
					this.SendPropertyChanged("XSize");
					this.OnXSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YSize", DbType="Float")]
		public System.Nullable<double> YSize
		{
			get
			{
				return this._YSize;
			}
			set
			{
				if ((this._YSize != value))
				{
					this.OnYSizeChanging(value);
					this.SendPropertyChanging();
					this._YSize = value;
					this.SendPropertyChanged("YSize");
					this.OnYSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSize", DbType="Float")]
		public System.Nullable<double> TotalSize
		{
			get
			{
				return this._TotalSize;
			}
			set
			{
				if ((this._TotalSize != value))
				{
					this.OnTotalSizeChanging(value);
					this.SendPropertyChanging();
					this._TotalSize = value;
					this.SendPropertyChanged("TotalSize");
					this.OnTotalSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseSize", DbType="NVarChar(200)")]
		public string UseSize
		{
			get
			{
				return this._UseSize;
			}
			set
			{
				if ((this._UseSize != value))
				{
					this.OnUseSizeChanging(value);
					this.SendPropertyChanging();
					this._UseSize = value;
					this.SendPropertyChanged("UseSize");
					this.OnUseSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int")]
		public System.Nullable<int> DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="BigInt")]
		public System.Nullable<long> Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UltilityString", DbType="NVarChar(200)")]
		public string UltilityString
		{
			get
			{
				return this._UltilityString;
			}
			set
			{
				if ((this._UltilityString != value))
				{
					this.OnUltilityStringChanging(value);
					this.SendPropertyChanging();
					this._UltilityString = value;
					this.SendPropertyChanged("UltilityString");
					this.OnUltilityStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PostDate
		{
			get
			{
				return this._PostDate;
			}
			set
			{
				if ((this._PostDate != value))
				{
					this.OnPostDateChanging(value);
					this.SendPropertyChanging();
					this._PostDate = value;
					this.SendPropertyChanged("PostDate");
					this.OnPostDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ViewDate
		{
			get
			{
				return this._ViewDate;
			}
			set
			{
				if ((this._ViewDate != value))
				{
					this.OnViewDateChanging(value);
					this.SendPropertyChanging();
					this._ViewDate = value;
					this.SendPropertyChanged("ViewDate");
					this.OnViewDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTime", DbType="Int")]
		public System.Nullable<int> PostTime
		{
			get
			{
				return this._PostTime;
			}
			set
			{
				if ((this._PostTime != value))
				{
					this.OnPostTimeChanging(value);
					this.SendPropertyChanging();
					this._PostTime = value;
					this.SendPropertyChanged("PostTime");
					this.OnPostTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsType", DbType="NVarChar(50)")]
		public string NewsType
		{
			get
			{
				return this._NewsType;
			}
			set
			{
				if ((this._NewsType != value))
				{
					this.OnNewsTypeChanging(value);
					this.SendPropertyChanging();
					this._NewsType = value;
					this.SendPropertyChanged("NewsType");
					this.OnNewsTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int")]
		public System.Nullable<int> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealProject", DbType="NVarChar(200)")]
		public string RealProject
		{
			get
			{
				return this._RealProject;
			}
			set
			{
				if ((this._RealProject != value))
				{
					this.OnRealProjectChanging(value);
					this.SendPropertyChanging();
					this._RealProject = value;
					this.SendPropertyChanged("RealProject");
					this.OnRealProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(200)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_floor", DbType="NVarChar(200)")]
		public string floor
		{
			get
			{
				return this._floor;
			}
			set
			{
				if ((this._floor != value))
				{
					this.OnfloorChanging(value);
					this.SendPropertyChanging();
					this._floor = value;
					this.SendPropertyChanged("floor");
					this.OnfloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealCode", DbType="NVarChar(200)")]
		public string RealCode
		{
			get
			{
				return this._RealCode;
			}
			set
			{
				if ((this._RealCode != value))
				{
					this.OnRealCodeChanging(value);
					this.SendPropertyChanging();
					this._RealCode = value;
					this.SendPropertyChanged("RealCode");
					this.OnRealCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WideRoad", DbType="NVarChar(200)")]
		public string WideRoad
		{
			get
			{
				return this._WideRoad;
			}
			set
			{
				if ((this._WideRoad != value))
				{
					this.OnWideRoadChanging(value);
					this.SendPropertyChanging();
					this._WideRoad = value;
					this.SendPropertyChanged("WideRoad");
					this.OnWideRoadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealUnit", DbType="Int")]
		public System.Nullable<int> RealUnit
		{
			get
			{
				return this._RealUnit;
			}
			set
			{
				if ((this._RealUnit != value))
				{
					this.OnRealUnitChanging(value);
					this.SendPropertyChanging();
					this._RealUnit = value;
					this.SendPropertyChanged("RealUnit");
					this.OnRealUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeUnit", DbType="NVarChar(50)")]
		public string SizeUnit
		{
			get
			{
				return this._SizeUnit;
			}
			set
			{
				if ((this._SizeUnit != value))
				{
					this.OnSizeUnitChanging(value);
					this.SendPropertyChanging();
					this._SizeUnit = value;
					this.SendPropertyChanged("SizeUnit");
					this.OnSizeUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
